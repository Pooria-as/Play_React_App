{"version":3,"sources":["context/MyProvider.js","components/Stage1.component.jsx","components/Stage2.component.jsx","App.js","index.js"],"names":["MyContext","React","createContext","MyProvider","state","stage","players","result","addPlayerHandler","PlayerName","setState","prevState","RemovePlayerHandler","idx","NewPlayer","splice","nextHandler","length","setTimeout","LooserHandler","toast","error","position","POSITION","TOP_LEFT","theme","StartOverHandler","Math","floor","random","Provider","value","this","addPlayer","removePlayer","Next","props","children","Component","Stage1","PlayerValue","useRef","context","useContext","useState","setError","ValidateInput","Form","onSubmit","e","preventDefault","current","Group","Control","style","marginBottom","ref","type","placeholder","name","Alert","variant","Button","className","map","player","kye","onClick","class","Stage2","App","reactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.51855351.chunk.js","sourcesContent":["import React from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst MyContext=React.createContext()\r\n\r\n\r\nclass MyProvider extends React.Component {\r\n    \r\n        state=\r\n        {\r\n            stage:1,\r\n            players:[],\r\n            result:''\r\n        }\r\n    \r\n\r\n        addPlayerHandler=(PlayerName)=>\r\n        (\r\n            this.setState((prevState)=>({\r\n                players:[\r\n                    ...prevState.players,\r\n                    PlayerName\r\n                ]\r\n            }))\r\n        )\r\n        RemovePlayerHandler =(idx)=>\r\n        \r\n        {\r\n            let NewPlayer= this.state.players\r\n            NewPlayer.splice(idx,1)\r\n            this.setState({players:NewPlayer})\r\n\r\n        }\r\n        nextHandler = ()=>\r\n        {\r\n            \r\n            if(this.state.players.length > 2)\r\n            {\r\n                \r\n\r\n                this.setState({\r\n                    stage:2\r\n                },()=>{\r\n                    setTimeout(()=>{\r\n                         this.LooserHandler()\r\n                    },2000)\r\n                })\r\n\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n            else\r\n            {\r\n                toast.error(\"You most create 3 person at least\", {\r\n                    position: toast.POSITION.TOP_LEFT,\r\n                    theme: \"dark\"\r\n                  });\r\n            }\r\n        }\r\n\r\n\r\n        StartOverHandler=()=>\r\n        {\r\n            this.setState(\r\n                {\r\n                    stage:1,\r\n                    players:[],\r\n                    result:''\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n\r\n        LooserHandler =()=>\r\n        {\r\n            let {players}=this.state\r\n            \r\n            this.setState(\r\n                {\r\n                    result:players[Math.floor(Math.random() * players.length)]\r\n                }\r\n            )\r\n        }\r\n\r\n\r\n    \r\n    render() { \r\n        return (\r\n            <div>\r\n                <MyContext.Provider \r\n                \r\n                value={{\r\n                state: this.state,\r\n                addPlayer:this.addPlayerHandler,\r\n                removePlayer:this.RemovePlayerHandler,\r\n                Next:this.nextHandler,\r\n                StartOverHandler:this.StartOverHandler,\r\n                LooserHandler:this.LooserHandler\r\n            }} >\r\n                    {this.props.children}\r\n                </MyContext.Provider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport {MyProvider,MyContext} ;","import {React,useRef,useContext,useState} from 'react';\r\nimport { Alert, Button , Form }  from \"react-bootstrap\"\r\nimport {MyContext} from \"../context/MyProvider\"\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nconst Stage1 =()=>\r\n{\r\n    const PlayerValue=useRef();\r\n    const context = useContext(MyContext);\r\n    const [error,setError]=useState([false,''])\r\n    const PlayerName=context.state.players\r\n    const handleSubmit=(e)=>\r\n    {\r\n        e.preventDefault();\r\n        const value=PlayerValue.current.value\r\n        const validated=ValidateInput(value)\r\n\r\n        if(validated)\r\n        {\r\n            setError([false,''])\r\n            context.addPlayer(value)\r\n            PlayerValue.current.value=''\r\n\r\n\r\n\r\n        }\r\n     \r\n\r\n    }\r\n\r\n    const ValidateInput=(value)=>\r\n    {\r\n        if(value==='')\r\n        {\r\n            setError([true,'Player Name is Required !'])\r\n            return false;\r\n        }\r\n        if(value.length <= 3)\r\n        {\r\n            setError([true,'Player Name Most 3 char at least!'])\r\n            return false;\r\n        }\r\n        return true;\r\n        \r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group>\r\n            <Form.Control style={{\r\n                marginBottom:\"2px\"\r\n            }} ref={PlayerValue}  type=\"text\" placeholder='Enter Player Name' name=\"PlayerName\" />\r\n            \r\n            </Form.Group>\r\n            \r\n            \r\n            {\r\n                error[1] \r\n                ?\r\n                <Alert variant='danger'>\r\n                    {error[1]}\r\n                </Alert>\r\n                :\r\n                null\r\n            }\r\n            <br/>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Add Player\r\n            </Button>\r\n\r\n            {\r\n                PlayerName && PlayerName.length > 0 ?\r\n               <>\r\n\r\n               <hr/> \r\n                <div>\r\n                    <ul className=\"list-group\">\r\n                    {\r\n                        PlayerName.map((player,idx)=>(\r\n                            <li kye={idx} className=\"list-group-item d-flex justify-content-between align-items-center list-group-item-action\">\r\n                           <h5>\r\n                           {\r\n                                player\r\n                            }\r\n                           </h5>\r\n                            <span  className=\"btn btn-sm btn-danger\" onClick={()=>(\r\n                                context.removePlayer(idx)\r\n                            )}>\r\n                            \r\n                            <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\r\n\r\n                            \r\n                            </span>\r\n                            </li>\r\n                        ))\r\n                    }\r\n                    </ul>\r\n\r\n\r\n                    <div className=\"action_button\" \r\n                    onClick={()=>context.Next()}\r\n                    >\r\n                    Next\r\n                    </div>\r\n\r\n                </div> \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n               </>\r\n               :\r\n               null\r\n\r\n            }\r\n\r\n\r\n\r\n          </Form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Stage1","import {React,useContext} from 'react';\r\nimport { MyContext } from '../context/MyProvider';\r\nconst Stage2 =()=>\r\n{\r\n\r\n  const context = useContext(MyContext)\r\n\r\n\r\n    return(\r\n        <>\r\n    <div className=\"result_wrapper\">\r\n    <h3>The looser is:</h3>\r\n\r\n        <div>\r\n            {context.state.result}\r\n        </div>\r\n    </div>\r\n\r\n\r\n    <div className='action_button'\r\n     onClick={()=>context.StartOverHandler()}>\r\n        Start Over\r\n    </div>\r\n\r\n\r\n    <div className='action_button btn_2'\r\n    onClick={\r\n        ()=>context.LooserHandler()\r\n    }\r\n    >\r\n        Get New Looser\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Stage2","import {React,useContext} from 'react';\r\nimport Stage1 from './components/Stage1.component';\r\nimport Stage2 from './components/Stage2.component';\r\nimport { MyContext } from './context/MyProvider';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst App=()=>\r\n{\r\n\r\nconst context = useContext(MyContext)\r\n\r\n    return(\r\n        <div className=\"wrapper\">\r\n        <div className=\"center-wrapper\">\r\n        <h1>Who pays the bill ?</h1>\r\n         {\r\n         context.state.stage===1 ? <Stage1/> : <Stage2/>\r\n            }\r\n        </div> \r\n        <ToastContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./App.css\"\r\n\r\nimport { MyProvider } from './context/MyProvider';\r\n\r\nreactDom.render(\r\n    \r\n     <MyProvider>  \r\n    <App/>\r\n    \r\n    </MyProvider> \r\n    \r\n    ,document.getElementById('root')\r\n)"],"sourceRoot":""}